name: Ova-Free-Version

on:
  push:
    branches:
      - free_version
    paths-ignore:
      - 'README.md'
    
permissions:
  id-token: write
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Code-CheckOut
        uses: actions/checkout@v3

      - name: Code-Test
        run: echo "CODE TEST GOES HERE"

      - name: Code-Linting
        run: echo "CODE LINTING GOES HERE"

  C_Delivery:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Code-CheckOut
        uses: actions/checkout@v3

      - name: Server-Update
        run: sudo apt update -y

      - name: AWS-CLI-LOGIN
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ECR-Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Image-Build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          sudo docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . 
          sudo docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" 

  C_Deployment:
    needs: C_Delivery
    runs-on: self-hosted
    steps:
      - name: Docker-Repo-Set-Up
        run: |
          sudo apt update 
          sudo apt install ca-certificates curl -y
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update

      - name: Install-Docker
        run: |
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

      - name: CheckOut-Code
        uses: actions/checkout@v3

      - name: AWS-CLI-LOGIN
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ECR-Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Image-Pull
        run: |
          sudo docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Clean-Containers
        run: |
          sudo docker kill mltest || true
          sudo docker rm mltest || true

      - name: Run-Dockers
        run: |
          sudo docker run --restart always -d -p 8080:8080 --ipc="host" --name=mltest -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}' ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
